version: '3'

services:
  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: 
      - infrastructure
    volumes:
      - "./.docker/rabbitmq:/var/lib/rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: $RABBITMQ_ERLANG_COOKIE
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      RABBITMQ_DEFAULT_VHOST: $RABBITMQ_DEFAULT_VHOST

  mongo:
    build: ./mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - "./.docker/mongo:/data/db"
    networks:
      - infrastructure
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD

  postgres:
    build: ./postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - "./.docker/postgres:/var/lib/postgresql/data"
    networks:
      - infrastructure
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    networks: 
      - infrastructure
    ports:
      - 7070:8080

networks:
  infrastructure: 

